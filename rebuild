#!/usr/bin/env bash
clear

docker rmi $(docker images -q)
docker rm -v $(docker ps -qa)


if [ ! "$(docker ps -q -f name=fte)" ]; then
    if [ "$(docker ps -aq -f status=exited -f name=fte)" ]; then
        # cleanup
        docker rm fte
        rm -rf /home/fte
        mkdir -p /home/fte
        chown -R 755 /home/fte
        docker rm -f fte
    fi
#    # run your container
#    docker run -d --name <name> my-docker-image
fi


docker build \
  --no-cache \
  --pull \
  -t b14ckp4nd\docker-fte:latest . && \
  docker create \
  --name=fte \
  --cap-add=NET_ADMIN \
  -e PUID=1000 \
  -e PGID=1000 \
  -e MODE='server' \
  -e CLIENT_IP=127.0.0.1 \
  -e CLIENT_PORT=8079 \
  -e SERVER_IP=127.0.0.1 \
  -e SERVER_PORT=8080 \
  -e PROXY_IP=127.0.0.1 \
  -e PROXY_PORT=8081 \
  -e TZ='Etc/Berlin' \
  -e TRANSFER_KEY='5733F9F169FE5E868CAD5A2CF6C3F43B2CD36D7A0D727F8EEE6BC359DEA29E4C' \
  -e INTERFACE=eth0 \
  -p 8079:8079 \
  -p 8080:8080 \
  -p 8081:8081 \
  -v /home/fte:/config \
  --restart unless-stopped \
  b14ckp4nd\docker-fte:latest && \
  docker start fte && \
   docker logs fte -f


#
#
#docker build \
#  --no-cache \
#  --pull \
#  -t b14ckp4nd\docker-fte:latest . && \
#  docker create \
#  --name=fte \
#  --cap-add=NET_ADMIN \
#  -e PUID=1000 \
#  -e PGID=1000 \
#  -e TZ=Europe/Berlin \
#  -e port=443 \
#  -e PROXY_IP=127.0.0.1 \
#  -e PROXY_PORT=8081 \
#  -e INTERFACE=eth0 \
#  -p 443:443 \
#  -p 8081:8081 \
#  -v /home/fte:/config \
#  --restart unless-stopped \
#  b14ckp4nd\docker-fte:latest && \
#  docker start fte && \
#   docker logs fte -f